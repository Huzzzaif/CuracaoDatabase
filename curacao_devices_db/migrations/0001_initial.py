# Generated by Django 4.2.6 on 2024-04-24 07:39

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Department',
            fields=[
                ('department', models.CharField(max_length=30, primary_key=True, serialize=False)),
                ('status', models.CharField(max_length=1)),
            ],
        ),
        migrations.CreateModel(
            name='Device',
            fields=[
                ('serial', models.CharField(max_length=100, primary_key=True, serialize=False)),
                ('MAC', models.CharField(max_length=100)),
                ('cid', models.IntegerField()),
                ('mid', models.IntegerField()),
                ('tid', models.IntegerField()),
                ('store', models.CharField(max_length=100)),
                ('pstation', models.CharField(max_length=100)),
                ('register', models.CharField(max_length=100)),
                ('ip', models.CharField(max_length=100)),
                ('labelid', models.CharField(max_length=100)),
                ('itassetid', models.IntegerField()),
                ('notes', models.CharField(max_length=100)),
                ('status', models.CharField(choices=[('A', 'Active'), ('I', 'Inactive'), ('B', 'Broken'), ('R', 'Repairing'), ('D', 'Destroyed')], default='A', max_length=1)),
                ('statusnotes', models.CharField(max_length=100)),
                ('department', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='curacao_devices_db.department')),
            ],
        ),
        migrations.CreateModel(
            name='Location',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('location_id', models.CharField(max_length=30)),
                ('name', models.CharField(max_length=30)),
                ('status', models.CharField(max_length=1)),
            ],
        ),
        migrations.CreateModel(
            name='Transaction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('time', models.CharField(max_length=100)),
                ('user', models.CharField(max_length=100)),
                ('geolocation', models.CharField(max_length=100)),
                ('type', models.CharField(max_length=100)),
                ('MAC', models.CharField(max_length=100)),
                ('cid', models.CharField(max_length=100)),
                ('tid', models.CharField(max_length=100)),
                ('mid', models.CharField(max_length=100)),
                ('store', models.CharField(max_length=100)),
                ('location', models.CharField(max_length=100)),
                ('department', models.CharField(max_length=100)),
                ('pstation', models.CharField(max_length=100)),
                ('register', models.CharField(max_length=100)),
                ('ip', models.CharField(max_length=100)),
                ('labelid', models.CharField(max_length=100)),
                ('itassetid', models.IntegerField()),
                ('notes', models.CharField(max_length=100)),
                ('status', models.CharField(choices=[('A', 'Active'), ('I', 'Inactive'), ('B', 'Broken'), ('R', 'Repairing'), ('D', 'Destroyed')], default='A', max_length=1)),
                ('statusnotes', models.CharField(max_length=100)),
                ('serial', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='curacao_devices_db.device')),
            ],
        ),
        migrations.AddField(
            model_name='device',
            name='location',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='curacao_devices_db.location'),
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('name', models.CharField(blank=True, max_length=254, null=True)),
                ('role', models.CharField(choices=[('developer', 'Developer'), ('admin', 'Admin'), ('technician', 'Technician')], max_length=10)),
                ('department', models.CharField(blank=True, max_length=30, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('last_login', models.DateTimeField(blank=True, null=True)),
                ('date_joined', models.DateTimeField(auto_now_add=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
